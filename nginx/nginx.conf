events {}

http {
	
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	gzip on;
	gzip_types text/plain text/css image/jpeg image/jpg image/png image/gif application/xml application/json application/pdf text/javascript application/javascript;
	gunzip on;	
	
	proxy_cache_path /var/www/demo/cache levels=1:2 keys_zone=mycache:10m inactive=30m;

	map $request_method $post_method {
        PURGE 1;
        default 0;
    }

	#upstream backend_hosts {
    #	server host1.example.com;
    #	server host2.example.com;
    #	server host3.example.com;
	#}

	server {

		listen 80;

		root /var/www/demo;

		index index.html index.htm;

		gzip_static on;

		# check if authorization header exists
		# if ($http_authorization = '') {
		# 	return 401 "Unauthenticated";
		# }

    	location ~ /(images|videos|files)/ {
    		autoindex on;
    	}

		location / {
			try_files $uri $uri/ @backend;
    	}

		location @backend {
    		proxy_pass http://localhost:8081;

			proxy_redirect off;

			proxy_cache mycache;
			proxy_cache_bypass $cookie_nocache $arg_nocache;
			#proxy_cache_valid any 1h;
			proxy_cache_valid 200 302 30m;
			proxy_cache_valid 404 1m;
			proxy_cache_revalidate on;
			proxy_cache_lock on;
			proxy_buffering on;
			#proxy_cache_purge $post_method;

			proxy_ignore_headers Expires X-Accel-Expires Cache-Control Set-Cookie;
			proxy_hide_header Expires;
			proxy_hide_header X-Accel-Expires;
        	proxy_hide_header Cache-Control;
        	proxy_hide_header Set-Cookie;
        	proxy_hide_header Pragma;

        	proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header X-Cache-Status $upstream_cache_status;
		}

		#location /proxy-me {
        #	proxy_pass http://backend_hosts;
    	#}

		location = /404 {
			return 404 "Sorry, content doesn't exist";
		}

	}
}
